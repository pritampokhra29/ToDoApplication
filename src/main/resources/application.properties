# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database Configuration - Externalized for Security
# Set DB_TYPE=h2 for development, DB_TYPE=postgresql for production
database.type=${DB_TYPE:h2}

# PostgreSQL Configuration (Production)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/todoapp}
spring.datasource.username=${DATABASE_USERNAME:todouser}
spring.datasource.password=${DATABASE_PASSWORD:todopassword}
spring.datasource.driver-class-name=${DATABASE_DRIVER:org.postgresql.Driver}

# JPA/Hibernate Configuration
spring.jpa.database-platform=${DATABASE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:300000}

# SQL Initialization
spring.sql.init.mode=${SQL_INIT_MODE:never}
spring.sql.init.data-locations=${SQL_INIT_DATA:classpath:data.sql}
spring.sql.init.continue-on-error=${SQL_CONTINUE_ON_ERROR:false}

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration - Externalized for Security
jwt.enabled=${JWT_ENABLED:true}
jwt.secret=${JWT_SECRET:JWTSecretKeyForToDoApplicationThatNeedsToBeAtLeast256BitsLongForHS256Algorithm}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Password Security
security.password.pepper=${SECURITY_PASSWORD_PEPPER:mySuperSecretKey123!}
secret.key=${SECRET_KEY:JWTkey}

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:}

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Actuator configuration for health checks
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info}
management.endpoint.health.show-details=${HEALTH_DETAILS:when-authorized}
management.health.defaults.enabled=true

# Logging Configuration
logging.level.com.example.demo=${LOG_LEVEL:INFO}
logging.level.AUDIT=INFO
logging.level.METHOD_EXECUTION=${METHOD_EXECUTION_LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:WARN}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL:WARN}
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BINDER_LOG_LEVEL:WARN}

# Log file configuration
logging.file.name=${LOG_FILE_PATH:./logs/application.log}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId:-}][%X{username:-}] %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId:-}][%X{username:-}] %logger{36} - %msg%n

# =============================================================================
# SPRING CONFIGURATION
# =============================================================================

# JPA Configuration
spring.jpa.defer-datasource-initialization=${DEFER_DATASOURCE_INIT:true}

# Bean definition overriding
spring.main.allow-bean-definition-overriding=true

# AOP Configuration
spring.aop.auto=true
spring.aop.proxy-target-class=true